type Query {
    getCustomerByIdRequest(request: GetCustomerByIdRequest): GetCustomerByIdResponse
    getCustomersSortedAndPaginatedRequest(request: GetCustomersSortedAndPaginatedRequest): GetCustomersSortedAndPaginatedResponse
    getCustomersByCityRequest(request: GetCustomersByCityRequest): GetCustomersByCityResponse
}

input GetCustomerByIdRequest {
    id: Int!
}

input GetCustomersSortedAndPaginatedRequest {
    pageNo: Int!
    pageSize: Int!
    sortBy: String!
    sortDirection: String!
}

input GetCustomersByCityRequest {
    cities: [String!]
}

type GetCustomerByIdResponse {
    message: String
    timestamp: String
    customer: Customer
}

type GetCustomersSortedAndPaginatedResponse {
    message: String
    timestamp: String
    count: Int
    customers: [Customer]
}

type GetCustomersByCityResponse {
    message: String
    timestamp: String
    count: Int
    customers: [Customer]
}

type Customer {
    firstName: String
    lastName: String
    birthday: String
    email: String
    address: Address
}

type Address {
    country: String
    city: String
    zip: String
}

